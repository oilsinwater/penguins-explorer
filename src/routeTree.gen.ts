/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

import { Route as rootRouteImport } from './pages/__root';
import { Route as IndexRouteImport } from './pages/index';
import { Route as VisualizationsIndexRouteImport } from './pages/visualizations/index';
import { Route as SearchDataRepositoriesIndexRouteImport } from './pages/search-data-repositories/index';
import { Route as PlaygroundIndexRouteImport } from './pages/playground/index';
import { Route as PenguinsIndexRouteImport } from './pages/penguins/index';
import { Route as MonitorActivitiesIndexRouteImport } from './pages/monitor-activities/index';
import { Route as ExploreDataIndexRouteImport } from './pages/explore-data/index';
import { Route as SearchDataRepositoriesIdRouteImport } from './pages/search-data-repositories/$id';
import { Route as RunComputationLayoutRouteImport } from './pages/run-computation/_layout';
import { Route as MonitorActivitiesDetailRouteImport } from './pages/monitor-activities/detail';
import { Route as MonitorActivitiesCalendarRouteImport } from './pages/monitor-activities/calendar';
import { Route as ExploreDataIdRouteImport } from './pages/explore-data/$id';
import { Route as ContributeDataLayoutRouteImport } from './pages/contribute-data/_layout';
import { Route as CompareDataLayoutRouteImport } from './pages/compare-data/_layout';
import { Route as RunComputationLayoutIndexRouteImport } from './pages/run-computation/_layout/index';
import { Route as ContributeDataLayoutIndexRouteImport } from './pages/contribute-data/_layout/index';
import { Route as CompareDataLayoutIndexRouteImport } from './pages/compare-data/_layout/index';
import { Route as ContributeDataLayoutReviewRouteImport } from './pages/contribute-data/_layout/review';
import { Route as ContributeDataLayoutPortalRouteImport } from './pages/contribute-data/_layout/portal';
import { Route as ContributeDataLayoutNewRouteImport } from './pages/contribute-data/_layout/new';
import { Route as CompareDataLayoutNewRouteImport } from './pages/compare-data/_layout/new';
import { Route as CompareDataLayoutCompareRouteImport } from './pages/compare-data/_layout/compare';
import { Route as RunComputationLayoutIdLayoutRouteImport } from './pages/run-computation/_layout/$id/_layout';
import { Route as RunComputationLayoutIdLayoutSettingsRouteImport } from './pages/run-computation/_layout/$id/_layout/settings';
import { Route as RunComputationLayoutIdLayoutRunningRouteImport } from './pages/run-computation/_layout/$id/_layout/running';
import { Route as RunComputationLayoutIdLayoutResultsRouteImport } from './pages/run-computation/_layout/$id/_layout/results';
import { Route as RunComputationLayoutIdLayoutDataInputsRouteImport } from './pages/run-computation/_layout/$id/_layout/data-inputs';

const RunComputationLayoutIdRouteImport = createFileRoute(
  '/run-computation/_layout/$id'
)();

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);
const VisualizationsIndexRoute = VisualizationsIndexRouteImport.update({
  id: '/visualizations/',
  path: '/visualizations/',
  getParentRoute: () => rootRouteImport,
} as any);
const SearchDataRepositoriesIndexRoute =
  SearchDataRepositoriesIndexRouteImport.update({
    id: '/search-data-repositories/',
    path: '/search-data-repositories/',
    getParentRoute: () => rootRouteImport,
  } as any);
const PlaygroundIndexRoute = PlaygroundIndexRouteImport.update({
  id: '/playground/',
  path: '/playground/',
  getParentRoute: () => rootRouteImport,
} as any);
const PenguinsIndexRoute = PenguinsIndexRouteImport.update({
  id: '/penguins/',
  path: '/penguins/',
  getParentRoute: () => rootRouteImport,
} as any);
const MonitorActivitiesIndexRoute = MonitorActivitiesIndexRouteImport.update({
  id: '/monitor-activities/',
  path: '/monitor-activities/',
  getParentRoute: () => rootRouteImport,
} as any);
const ExploreDataIndexRoute = ExploreDataIndexRouteImport.update({
  id: '/explore-data/',
  path: '/explore-data/',
  getParentRoute: () => rootRouteImport,
} as any);
const SearchDataRepositoriesIdRoute =
  SearchDataRepositoriesIdRouteImport.update({
    id: '/search-data-repositories/$id',
    path: '/search-data-repositories/$id',
    getParentRoute: () => rootRouteImport,
  } as any);
const RunComputationLayoutRoute = RunComputationLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => RunComputationRoute,
} as any);
const MonitorActivitiesDetailRoute = MonitorActivitiesDetailRouteImport.update({
  id: '/monitor-activities/detail',
  path: '/monitor-activities/detail',
  getParentRoute: () => rootRouteImport,
} as any);
const MonitorActivitiesCalendarRoute =
  MonitorActivitiesCalendarRouteImport.update({
    id: '/monitor-activities/calendar',
    path: '/monitor-activities/calendar',
    getParentRoute: () => rootRouteImport,
  } as any);
const ExploreDataIdRoute = ExploreDataIdRouteImport.update({
  id: '/explore-data/$id',
  path: '/explore-data/$id',
  getParentRoute: () => rootRouteImport,
} as any);
const ContributeDataLayoutRoute = ContributeDataLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ContributeDataRoute,
} as any);
const CompareDataLayoutRoute = CompareDataLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => CompareDataRoute,
} as any);
const RunComputationLayoutIdRoute = RunComputationLayoutIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => RunComputationLayoutRoute,
} as any);
const RunComputationLayoutIndexRoute =
  RunComputationLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => RunComputationLayoutRoute,
  } as any);
const ContributeDataLayoutIndexRoute =
  ContributeDataLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ContributeDataLayoutRoute,
  } as any);
const CompareDataLayoutIndexRoute = CompareDataLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CompareDataLayoutRoute,
} as any);
const ContributeDataLayoutReviewRoute =
  ContributeDataLayoutReviewRouteImport.update({
    id: '/review',
    path: '/review',
    getParentRoute: () => ContributeDataLayoutRoute,
  } as any);
const ContributeDataLayoutPortalRoute =
  ContributeDataLayoutPortalRouteImport.update({
    id: '/portal',
    path: '/portal',
    getParentRoute: () => ContributeDataLayoutRoute,
  } as any);
const ContributeDataLayoutNewRoute = ContributeDataLayoutNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ContributeDataLayoutRoute,
} as any);
const CompareDataLayoutNewRoute = CompareDataLayoutNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => CompareDataLayoutRoute,
} as any);
const CompareDataLayoutCompareRoute =
  CompareDataLayoutCompareRouteImport.update({
    id: '/compare',
    path: '/compare',
    getParentRoute: () => CompareDataLayoutRoute,
  } as any);
const RunComputationLayoutIdLayoutRoute =
  RunComputationLayoutIdLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => RunComputationLayoutIdRoute,
  } as any);
const RunComputationLayoutIdLayoutSettingsRoute =
  RunComputationLayoutIdLayoutSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => RunComputationLayoutIdLayoutRoute,
  } as any);
const RunComputationLayoutIdLayoutRunningRoute =
  RunComputationLayoutIdLayoutRunningRouteImport.update({
    id: '/running',
    path: '/running',
    getParentRoute: () => RunComputationLayoutIdLayoutRoute,
  } as any);
const RunComputationLayoutIdLayoutResultsRoute =
  RunComputationLayoutIdLayoutResultsRouteImport.update({
    id: '/results',
    path: '/results',
    getParentRoute: () => RunComputationLayoutIdLayoutRoute,
  } as any);
const RunComputationLayoutIdLayoutDataInputsRoute =
  RunComputationLayoutIdLayoutDataInputsRouteImport.update({
    id: '/data-inputs',
    path: '/data-inputs',
    getParentRoute: () => RunComputationLayoutIdLayoutRoute,
  } as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/compare-data': typeof CompareDataLayoutRouteWithChildren;
  '/contribute-data': typeof ContributeDataLayoutRouteWithChildren;
  '/explore-data/$id': typeof ExploreDataIdRoute;
  '/monitor-activities/calendar': typeof MonitorActivitiesCalendarRoute;
  '/monitor-activities/detail': typeof MonitorActivitiesDetailRoute;
  '/run-computation': typeof RunComputationLayoutRouteWithChildren;
  '/search-data-repositories/$id': typeof SearchDataRepositoriesIdRoute;
  '/explore-data': typeof ExploreDataIndexRoute;
  '/monitor-activities': typeof MonitorActivitiesIndexRoute;
  '/penguins': typeof PenguinsIndexRoute;
  '/playground': typeof PlaygroundIndexRoute;
  '/search-data-repositories': typeof SearchDataRepositoriesIndexRoute;
  '/visualizations': typeof VisualizationsIndexRoute;
  '/compare-data/compare': typeof CompareDataLayoutCompareRoute;
  '/compare-data/new': typeof CompareDataLayoutNewRoute;
  '/contribute-data/new': typeof ContributeDataLayoutNewRoute;
  '/contribute-data/portal': typeof ContributeDataLayoutPortalRoute;
  '/contribute-data/review': typeof ContributeDataLayoutReviewRoute;
  '/compare-data/': typeof CompareDataLayoutIndexRoute;
  '/contribute-data/': typeof ContributeDataLayoutIndexRoute;
  '/run-computation/': typeof RunComputationLayoutIndexRoute;
  '/run-computation/$id': typeof RunComputationLayoutIdLayoutRouteWithChildren;
  '/run-computation/$id/data-inputs': typeof RunComputationLayoutIdLayoutDataInputsRoute;
  '/run-computation/$id/results': typeof RunComputationLayoutIdLayoutResultsRoute;
  '/run-computation/$id/running': typeof RunComputationLayoutIdLayoutRunningRoute;
  '/run-computation/$id/settings': typeof RunComputationLayoutIdLayoutSettingsRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/explore-data/$id': typeof ExploreDataIdRoute;
  '/monitor-activities/calendar': typeof MonitorActivitiesCalendarRoute;
  '/monitor-activities/detail': typeof MonitorActivitiesDetailRoute;
  '/search-data-repositories/$id': typeof SearchDataRepositoriesIdRoute;
  '/explore-data': typeof ExploreDataIndexRoute;
  '/monitor-activities': typeof MonitorActivitiesIndexRoute;
  '/penguins': typeof PenguinsIndexRoute;
  '/playground': typeof PlaygroundIndexRoute;
  '/search-data-repositories': typeof SearchDataRepositoriesIndexRoute;
  '/visualizations': typeof VisualizationsIndexRoute;
  '/compare-data/compare': typeof CompareDataLayoutCompareRoute;
  '/compare-data/new': typeof CompareDataLayoutNewRoute;
  '/contribute-data/new': typeof ContributeDataLayoutNewRoute;
  '/contribute-data/portal': typeof ContributeDataLayoutPortalRoute;
  '/contribute-data/review': typeof ContributeDataLayoutReviewRoute;
  '/compare-data': typeof CompareDataLayoutIndexRoute;
  '/contribute-data': typeof ContributeDataLayoutIndexRoute;
  '/run-computation': typeof RunComputationLayoutIndexRoute;
  '/run-computation/$id': typeof RunComputationLayoutIdLayoutRouteWithChildren;
  '/run-computation/$id/data-inputs': typeof RunComputationLayoutIdLayoutDataInputsRoute;
  '/run-computation/$id/results': typeof RunComputationLayoutIdLayoutResultsRoute;
  '/run-computation/$id/running': typeof RunComputationLayoutIdLayoutRunningRoute;
  '/run-computation/$id/settings': typeof RunComputationLayoutIdLayoutSettingsRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/compare-data/_layout': typeof CompareDataLayoutRouteWithChildren;
  '/contribute-data/_layout': typeof ContributeDataLayoutRouteWithChildren;
  '/explore-data/$id': typeof ExploreDataIdRoute;
  '/monitor-activities/calendar': typeof MonitorActivitiesCalendarRoute;
  '/monitor-activities/detail': typeof MonitorActivitiesDetailRoute;
  '/run-computation/_layout': typeof RunComputationLayoutRouteWithChildren;
  '/search-data-repositories/$id': typeof SearchDataRepositoriesIdRoute;
  '/explore-data/': typeof ExploreDataIndexRoute;
  '/monitor-activities/': typeof MonitorActivitiesIndexRoute;
  '/penguins/': typeof PenguinsIndexRoute;
  '/playground/': typeof PlaygroundIndexRoute;
  '/search-data-repositories/': typeof SearchDataRepositoriesIndexRoute;
  '/visualizations/': typeof VisualizationsIndexRoute;
  '/compare-data/_layout/compare': typeof CompareDataLayoutCompareRoute;
  '/compare-data/_layout/new': typeof CompareDataLayoutNewRoute;
  '/contribute-data/_layout/new': typeof ContributeDataLayoutNewRoute;
  '/contribute-data/_layout/portal': typeof ContributeDataLayoutPortalRoute;
  '/contribute-data/_layout/review': typeof ContributeDataLayoutReviewRoute;
  '/compare-data/_layout/': typeof CompareDataLayoutIndexRoute;
  '/contribute-data/_layout/': typeof ContributeDataLayoutIndexRoute;
  '/run-computation/_layout/': typeof RunComputationLayoutIndexRoute;
  '/run-computation/_layout/$id': typeof RunComputationLayoutIdRouteWithChildren;
  '/run-computation/_layout/$id/_layout': typeof RunComputationLayoutIdLayoutRouteWithChildren;
  '/run-computation/_layout/$id/_layout/data-inputs': typeof RunComputationLayoutIdLayoutDataInputsRoute;
  '/run-computation/_layout/$id/_layout/results': typeof RunComputationLayoutIdLayoutResultsRoute;
  '/run-computation/_layout/$id/_layout/running': typeof RunComputationLayoutIdLayoutRunningRoute;
  '/run-computation/_layout/$id/_layout/settings': typeof RunComputationLayoutIdLayoutSettingsRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/compare-data'
    | '/contribute-data'
    | '/explore-data/$id'
    | '/monitor-activities/calendar'
    | '/monitor-activities/detail'
    | '/run-computation'
    | '/search-data-repositories/$id'
    | '/explore-data'
    | '/monitor-activities'
    | '/penguins'
    | '/playground'
    | '/search-data-repositories'
    | '/visualizations'
    | '/compare-data/compare'
    | '/compare-data/new'
    | '/contribute-data/new'
    | '/contribute-data/portal'
    | '/contribute-data/review'
    | '/compare-data/'
    | '/contribute-data/'
    | '/run-computation/'
    | '/run-computation/$id'
    | '/run-computation/$id/data-inputs'
    | '/run-computation/$id/results'
    | '/run-computation/$id/running'
    | '/run-computation/$id/settings';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/explore-data/$id'
    | '/monitor-activities/calendar'
    | '/monitor-activities/detail'
    | '/search-data-repositories/$id'
    | '/explore-data'
    | '/monitor-activities'
    | '/penguins'
    | '/playground'
    | '/search-data-repositories'
    | '/visualizations'
    | '/compare-data/compare'
    | '/compare-data/new'
    | '/contribute-data/new'
    | '/contribute-data/portal'
    | '/contribute-data/review'
    | '/compare-data'
    | '/contribute-data'
    | '/run-computation'
    | '/run-computation/$id'
    | '/run-computation/$id/data-inputs'
    | '/run-computation/$id/results'
    | '/run-computation/$id/running'
    | '/run-computation/$id/settings';
  id:
    | '__root__'
    | '/'
    | '/compare-data/_layout'
    | '/contribute-data/_layout'
    | '/explore-data/$id'
    | '/monitor-activities/calendar'
    | '/monitor-activities/detail'
    | '/run-computation/_layout'
    | '/search-data-repositories/$id'
    | '/explore-data/'
    | '/monitor-activities/'
    | '/penguins/'
    | '/playground/'
    | '/search-data-repositories/'
    | '/visualizations/'
    | '/compare-data/_layout/compare'
    | '/compare-data/_layout/new'
    | '/contribute-data/_layout/new'
    | '/contribute-data/_layout/portal'
    | '/contribute-data/_layout/review'
    | '/compare-data/_layout/'
    | '/contribute-data/_layout/'
    | '/run-computation/_layout/'
    | '/run-computation/_layout/$id'
    | '/run-computation/_layout/$id/_layout'
    | '/run-computation/_layout/$id/_layout/data-inputs'
    | '/run-computation/_layout/$id/_layout/results'
    | '/run-computation/_layout/$id/_layout/running'
    | '/run-computation/_layout/$id/_layout/settings';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ExploreDataIdRoute: typeof ExploreDataIdRoute;
  MonitorActivitiesCalendarRoute: typeof MonitorActivitiesCalendarRoute;
  MonitorActivitiesDetailRoute: typeof MonitorActivitiesDetailRoute;
  SearchDataRepositoriesIdRoute: typeof SearchDataRepositoriesIdRoute;
  ExploreDataIndexRoute: typeof ExploreDataIndexRoute;
  MonitorActivitiesIndexRoute: typeof MonitorActivitiesIndexRoute;
  PenguinsIndexRoute: typeof PenguinsIndexRoute;
  PlaygroundIndexRoute: typeof PlaygroundIndexRoute;
  SearchDataRepositoriesIndexRoute: typeof SearchDataRepositoriesIndexRoute;
  VisualizationsIndexRoute: typeof VisualizationsIndexRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/visualizations/': {
      id: '/visualizations/';
      path: '/visualizations';
      fullPath: '/visualizations';
      preLoaderRoute: typeof VisualizationsIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/search-data-repositories/': {
      id: '/search-data-repositories/';
      path: '/search-data-repositories';
      fullPath: '/search-data-repositories';
      preLoaderRoute: typeof SearchDataRepositoriesIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/playground/': {
      id: '/playground/';
      path: '/playground';
      fullPath: '/playground';
      preLoaderRoute: typeof PlaygroundIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/penguins/': {
      id: '/penguins/';
      path: '/penguins';
      fullPath: '/penguins';
      preLoaderRoute: typeof PenguinsIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/monitor-activities/': {
      id: '/monitor-activities/';
      path: '/monitor-activities';
      fullPath: '/monitor-activities';
      preLoaderRoute: typeof MonitorActivitiesIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/explore-data/': {
      id: '/explore-data/';
      path: '/explore-data';
      fullPath: '/explore-data';
      preLoaderRoute: typeof ExploreDataIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/search-data-repositories/$id': {
      id: '/search-data-repositories/$id';
      path: '/search-data-repositories/$id';
      fullPath: '/search-data-repositories/$id';
      preLoaderRoute: typeof SearchDataRepositoriesIdRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/run-computation/_layout': {
      id: '/run-computation/_layout';
      path: '';
      fullPath: '/run-computation';
      preLoaderRoute: typeof RunComputationLayoutRouteImport;
      parentRoute: typeof RunComputationRoute;
    };
    '/monitor-activities/detail': {
      id: '/monitor-activities/detail';
      path: '/monitor-activities/detail';
      fullPath: '/monitor-activities/detail';
      preLoaderRoute: typeof MonitorActivitiesDetailRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/monitor-activities/calendar': {
      id: '/monitor-activities/calendar';
      path: '/monitor-activities/calendar';
      fullPath: '/monitor-activities/calendar';
      preLoaderRoute: typeof MonitorActivitiesCalendarRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/explore-data/$id': {
      id: '/explore-data/$id';
      path: '/explore-data/$id';
      fullPath: '/explore-data/$id';
      preLoaderRoute: typeof ExploreDataIdRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/contribute-data/_layout': {
      id: '/contribute-data/_layout';
      path: '';
      fullPath: '/contribute-data';
      preLoaderRoute: typeof ContributeDataLayoutRouteImport;
      parentRoute: typeof ContributeDataRoute;
    };
    '/compare-data/_layout': {
      id: '/compare-data/_layout';
      path: '';
      fullPath: '/compare-data';
      preLoaderRoute: typeof CompareDataLayoutRouteImport;
      parentRoute: typeof CompareDataRoute;
    };
    '/run-computation/_layout/$id': {
      id: '/run-computation/_layout/$id';
      path: '/$id';
      fullPath: '/run-computation/$id';
      preLoaderRoute: typeof RunComputationLayoutIdRouteImport;
      parentRoute: typeof RunComputationLayoutRoute;
    };
    '/run-computation/_layout/': {
      id: '/run-computation/_layout/';
      path: '/';
      fullPath: '/run-computation/';
      preLoaderRoute: typeof RunComputationLayoutIndexRouteImport;
      parentRoute: typeof RunComputationLayoutRoute;
    };
    '/contribute-data/_layout/': {
      id: '/contribute-data/_layout/';
      path: '/';
      fullPath: '/contribute-data/';
      preLoaderRoute: typeof ContributeDataLayoutIndexRouteImport;
      parentRoute: typeof ContributeDataLayoutRoute;
    };
    '/compare-data/_layout/': {
      id: '/compare-data/_layout/';
      path: '/';
      fullPath: '/compare-data/';
      preLoaderRoute: typeof CompareDataLayoutIndexRouteImport;
      parentRoute: typeof CompareDataLayoutRoute;
    };
    '/contribute-data/_layout/review': {
      id: '/contribute-data/_layout/review';
      path: '/review';
      fullPath: '/contribute-data/review';
      preLoaderRoute: typeof ContributeDataLayoutReviewRouteImport;
      parentRoute: typeof ContributeDataLayoutRoute;
    };
    '/contribute-data/_layout/portal': {
      id: '/contribute-data/_layout/portal';
      path: '/portal';
      fullPath: '/contribute-data/portal';
      preLoaderRoute: typeof ContributeDataLayoutPortalRouteImport;
      parentRoute: typeof ContributeDataLayoutRoute;
    };
    '/contribute-data/_layout/new': {
      id: '/contribute-data/_layout/new';
      path: '/new';
      fullPath: '/contribute-data/new';
      preLoaderRoute: typeof ContributeDataLayoutNewRouteImport;
      parentRoute: typeof ContributeDataLayoutRoute;
    };
    '/compare-data/_layout/new': {
      id: '/compare-data/_layout/new';
      path: '/new';
      fullPath: '/compare-data/new';
      preLoaderRoute: typeof CompareDataLayoutNewRouteImport;
      parentRoute: typeof CompareDataLayoutRoute;
    };
    '/compare-data/_layout/compare': {
      id: '/compare-data/_layout/compare';
      path: '/compare';
      fullPath: '/compare-data/compare';
      preLoaderRoute: typeof CompareDataLayoutCompareRouteImport;
      parentRoute: typeof CompareDataLayoutRoute;
    };
    '/run-computation/_layout/$id/_layout': {
      id: '/run-computation/_layout/$id/_layout';
      path: '/$id';
      fullPath: '/run-computation/$id';
      preLoaderRoute: typeof RunComputationLayoutIdLayoutRouteImport;
      parentRoute: typeof RunComputationLayoutIdRoute;
    };
    '/run-computation/_layout/$id/_layout/settings': {
      id: '/run-computation/_layout/$id/_layout/settings';
      path: '/settings';
      fullPath: '/run-computation/$id/settings';
      preLoaderRoute: typeof RunComputationLayoutIdLayoutSettingsRouteImport;
      parentRoute: typeof RunComputationLayoutIdLayoutRoute;
    };
    '/run-computation/_layout/$id/_layout/running': {
      id: '/run-computation/_layout/$id/_layout/running';
      path: '/running';
      fullPath: '/run-computation/$id/running';
      preLoaderRoute: typeof RunComputationLayoutIdLayoutRunningRouteImport;
      parentRoute: typeof RunComputationLayoutIdLayoutRoute;
    };
    '/run-computation/_layout/$id/_layout/results': {
      id: '/run-computation/_layout/$id/_layout/results';
      path: '/results';
      fullPath: '/run-computation/$id/results';
      preLoaderRoute: typeof RunComputationLayoutIdLayoutResultsRouteImport;
      parentRoute: typeof RunComputationLayoutIdLayoutRoute;
    };
    '/run-computation/_layout/$id/_layout/data-inputs': {
      id: '/run-computation/_layout/$id/_layout/data-inputs';
      path: '/data-inputs';
      fullPath: '/run-computation/$id/data-inputs';
      preLoaderRoute: typeof RunComputationLayoutIdLayoutDataInputsRouteImport;
      parentRoute: typeof RunComputationLayoutIdLayoutRoute;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExploreDataIdRoute: ExploreDataIdRoute,
  MonitorActivitiesCalendarRoute: MonitorActivitiesCalendarRoute,
  MonitorActivitiesDetailRoute: MonitorActivitiesDetailRoute,
  SearchDataRepositoriesIdRoute: SearchDataRepositoriesIdRoute,
  ExploreDataIndexRoute: ExploreDataIndexRoute,
  MonitorActivitiesIndexRoute: MonitorActivitiesIndexRoute,
  PenguinsIndexRoute: PenguinsIndexRoute,
  PlaygroundIndexRoute: PlaygroundIndexRoute,
  SearchDataRepositoriesIndexRoute: SearchDataRepositoriesIndexRoute,
  VisualizationsIndexRoute: VisualizationsIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
