import { render } from '@testing-library/react';\nimport { axe } from 'vitest-axe';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { expect, describe, it } from 'vitest';\nimport { AppProvider } from '@/context/ContextProvider';\nimport { VisualizationPanel } from './VisualizationPanel';\n\nconst mockQueryClient = new QueryClient({\n  defaultOptions: {\n    queries: { retry: false },\n  },\n});\n\nconst wrapper = ({ children }: { children: React.ReactNode }) => (\n  <AppProvider>\n    <QueryClientProvider client={mockQueryClient}>\n      {children}\n    </QueryClientProvider>\n  </AppProvider>\n);\n\nexpect.extend(axe);\n\ndescribe('VisualizationPanel Accessibility', () => {\n  it('passes axe accessibility scan', async () => {\n    const { container } = render(<VisualizationPanel />, { wrapper });\n\n    const results = await axe(container);\n    expect(results).toHaveNoViolations();\n  });\n});